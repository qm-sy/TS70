C51 COMPILER V9.60.7.0   TIM                                                               10/24/2025 16:55:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIM
OBJECT MODULE PLACED IN ..\Output\tim.obj
COMPILER INVOKED BY: D:\APP\KEIL\MDK\C51\BIN\C51.EXE ..\Core\Src\tim.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP\Inc;
                    -..\Core\Inc;..\Driver;..\SYSTEM;..\Emembed\Inc) DEBUG OBJECTEXTEND PRINT(.\Listings\tim.lst) TABS(2) OBJECT(..\Output\ti
                    -m.obj)

line level    source

   1          #include "tim.h"
   2          
   3          bit gui_scan_flag;
   4          
   5          void Tim0_Init( void )      //1ms
   6          {
   7   1          TMOD &= 0xfc;           //设置为16bit的定时器工作模式
   8   1          TMOD |= 0x01;           //T0_M1 = 0 T0_M0 = 0: 16位自动重装载模式 
   9   1      
  10   1          TH0   = (uint8_t)(T0_PERIOD_1MS>>8);
  11   1          TL0   = (uint8_t)T0_PERIOD_1MS;   
  12   1      
  13   1          ET0   = 1;              //使能中断
  14   1          TR0   = 1;              //启动T0定时器
  15   1          //TF0 = 0;              //硬件自动清0
  16   1      }
  17          
  18          void Tim1_Init( void )      //1ms
  19          {
  20   1          TMOD &= 0xcf;           //设置为16bit的定时器工作模式
  21   1          TMOD |= 0x10;           //T1_M1 = 0 T1_M0 = 0: 16位自动重装载模式 
  22   1      
  23   1          TH1   = (uint8_t)(T0_PERIOD_1MS>>8);
  24   1          TL1   = (uint8_t)T0_PERIOD_1MS;        
  25   1      
  26   1          ET1   = 1;              //使能中断
  27   1          TR1   = 1;              //启动T1定时器
  28   1          //TF1 = 0;              //硬件自动清0
  29   1      }
  30          
  31          void Tim0_Isr( void ) interrupt 1
  32          {
  33   1          static uint8_t press_scan_cnt = 0;
  34   1          static uint16_t paoji_cnt = 0;
  35   1          static uint16_t scan_03_cnt = 0;
  36   1      
  37   1          TH0   = (uint8_t)(T0_PERIOD_1MS>>8);
  38   1          TL0   = (uint8_t)T0_PERIOD_1MS;      
  39   1      
  40   1        if(T_O2 > 0)
  41   1          {
  42   2              T_O2--;
  43   2          }
  44   1      
  45   1          if( gui_scan_flag == 0 )
  46   1          {
  47   2              press_scan_cnt++;
  48   2              if( press_scan_cnt == 50 )
  49   2              {
  50   3                  press_scan_cnt = 0;
  51   3                  gui_scan_flag = 1;
  52   3              }
  53   2          }
C51 COMPILER V9.60.7.0   TIM                                                               10/24/2025 16:55:10 PAGE 2   

  54   1      
  55   1          if( hansen.paoji_flag  == 1 )
  56   1          {
  57   2              paoji_cnt++;
  58   2              if( paoji_cnt == 1000 )
  59   2              {
  60   3                  paoji_cnt = 0;
  61   3                  hansen.paoji_s++;
  62   3                  if( hansen.paoji_s == 60 )
  63   3                  {
  64   4                      hansen.paoji_s = 0;
  65   4                      hansen.paoji_min++;
  66   4                      if( hansen.paoji_min == 60 )
  67   4                      {
  68   5                          hansen.paoji_min = 0;
  69   5                          hansen.paoji_h++;
  70   5                      }
  71   4                  }
  72   3                  hansen.paoji_send = 1;
  73   3              }
  74   2          }else
  75   1          {
  76   2              hansen.paoji_send = 0;
  77   2              hansen.paoji_h = hansen.paoji_min = hansen.paoji_s = 0;
  78   2              paoji_cnt = 0;
  79   2          }
  80   1      
  81   1          if(( sp350.params_get_flag1 == 1 ) && ( sp350.params_get_flag2 == 0 ))
  82   1          {
  83   2              scan_03_cnt++;
  84   2              if( scan_03_cnt == 200 )
  85   2              {
  86   3                  sp350.params_get_flag2 = 1;
  87   3                  scan_03_cnt = 0;
  88   3              }
  89   2          }else
  90   1          {
  91   2              scan_03_cnt = 0;
  92   2          }
  93   1      }
  94          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    288    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

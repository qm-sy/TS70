C51 COMPILER V9.60.7.0   UART                                                              10/09/2025 15:07:42 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN ..\Output\uart.obj
COMPILER INVOKED BY: D:\APP\KEIL\MDK\C51\BIN\C51.EXE ..\Core\Src\uart.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\BSP\Inc
                    -;..\Core\Inc;..\Driver;..\SYSTEM;..\Emembed\Inc) DEBUG OBJECTEXTEND PRINT(.\Listings\uart.lst) TABS(2) OBJECT(..\Output\
                    -uart.obj)

line level    source

   1          #include "uart.h"
   2          
   3          uint8_t  xdata R_u2[UART2_RX_LENTH];  //串口2接受数组
   4          uint8_t  xdata R_OD2;             //串口2收到数据
   5          uint16_t xdata R_CN2;           //串口2长度计数器
   6          uint8_t  xdata T_O2;            //串口2超时计数器
   7          bit        Busy2;             //串口2发送标志
   8          
   9          bit        Busy4;             //串口2发送标志
  10          
  11          bit        Response_flog;       //应答用
  12          bit        Auto_data_upload;    //数据自动上传用
  13          bit        Crc_check_flog;      //Crc校验标记
  14          bit        download_flag;     //串口2通讯与下载区分标志位
  15          
  16          void burn_params_init( void )
  17          {
  18   1        R_OD2 = 0;
  19   1        R_CN2 = 0;
  20   1        T_O2  = 0;
  21   1        Busy2 = 0;
  22   1        Busy4 = 0;
  23   1        Response_flog    = 0;
  24   1        Auto_data_upload = 0;
  25   1        Crc_check_flog   = 0;
  26   1        download_flag    = 1;
  27   1      }
  28          
  29          void Uart2_Init( uint32_t baud )
  30          {
  31   1          MUX_SEL |= 0X40;        //[6] = 1 时，IO口 P0.4、P0.5作为uart2接口
  32   1      
  33   1      
  34   1          SCON0 = 0x50;           //uart2控制接口，SM1 = 1, REN0 = 1;
  35   1          ADCON = 0x80;           //波特率发生器选择  0x00=T1 定时器，0x80=使用 SREL0H:L。
  36   1          PCON &= 0x7f;           //[7] = 1 时，波特率倍频 为0则不倍频
  37   1      
  38   1          baud = 1024 - FOSC / 64 / baud;
  39   1      
  40   1          SREL0H = (uint8_t)(baud>>8);
  41   1          SREL0L = (uint8_t)baud;
  42   1      
  43   1          ES0 = 1;                //uart2 中断开启
  44   1      }
  45          
  46          void Uart4_Init( uint32_t baud )
  47          {
  48   1        SCON2T= 0x80;       //发送使能和模式设置
  49   1        SCON2R= 0x80;       //接受使能和模式设置 
  50   1        ES2R = 1;           //中断接受使能
  51   1          ES2T = 1;           //中断发送使能
  52   1      
  53   1          baud = FOSC/8/baud;
C51 COMPILER V9.60.7.0   UART                                                              10/09/2025 15:07:42 PAGE 2   

  54   1      
  55   1          BODE2_DIV_H = (uint8_t)(baud>>8);
  56   1          BODE2_DIV_L = (uint8_t)baud;
  57   1      
  58   1          // TR4=0;
  59   1      }
  60          
  61          void Uart5_Init( uint32_t baud )
  62          {
  63   1        SCON3T= 0x80;       //发送使能和模式设置
  64   1        SCON3R= 0x80;       //接受使能和模式设置 
  65   1        ES3R = 1;           //中断接受使能
  66   1          ES3T = 1;           //中断发送使能
  67   1      
  68   1          baud = FOSC/8/baud;
  69   1      
  70   1        BODE3_DIV_H = (uint8_t)(baud>>8);
  71   1          BODE3_DIV_L = (uint8_t)baud;
  72   1      
  73   1          TR5 = 0;
  74   1      }
  75          
  76          /*    串口2下载程序   */
  77          void uart_frame_deal( void )
  78          {
  79   1        //串口2数据收发
  80   1        if(( R_OD2 == 1 ) && ( T_O2 == 0 ))
  81   1        {
  82   2          R_OD2=0;
  83   2          deal_uart_data(R_u2,(uint16_t*)(&R_CN2),2,RESPONSE_UART2,CRC_CHECK_UART2);
  84   2          R_CN2=0;
  85   2        } 
  86   1      }
  87          
  88          void deal_uart_data(uint8_t* Arr_rece,uint16_t* Data_len,uint8_t Uart_num,bit Response,bit Crc_ck)
  89          {
  90   1        uint16_t N = 0; 
  91   1        bit Flog = 1;
  92   1      
  93   1        while(Flog)
  94   1        {   
  95   2          if(( Arr_rece[N] == DTHD1 ) && ( Arr_rece[N+1] == DTHD2 ))   //5A A5 07 82 1000 0001 0002
  96   2          {      
  97   3            if( Arr_rece[N+3] == 0x82 )     
  98   3            {    
  99   4              Response_flog = Response;       //应答标记
 100   4              Crc_check_flog = Crc_ck;        //Crc标记
 101   4              deal_82_cmd(Uart_num,Arr_rece + N);   //处理82指令
 102   4              N = N + Arr_rece[N + 2] + 2;
 103   4            }                         // 0  1  2  3  4  5  6  7 8  9 10
 104   3            else if( Arr_rece[N + 3] == 0x83 )        //5A A5 08 83 1000 02 0001 0002
 105   3            {     
 106   4              uint8_t Val[FRAME_LEN] = {0}; 
 107   4              Crc_check_flog = Crc_ck;        //Crc标记
 108   4              deal_83_cmd(Uart_num, Val, Arr_rece + N);//处理83指令
 109   4              N = N + Arr_rece[N + 2] + 2;
 110   4            }else
 111   3            {
 112   4              N++;
 113   4            }   
 114   3          }
 115   2          if( N < (*Data_len - 4)) 
C51 COMPILER V9.60.7.0   UART                                                              10/09/2025 15:07:42 PAGE 3   

 116   2          {
 117   3            N++;
 118   3          }
 119   2          else 
 120   2          {
 121   3            Flog=0; 
 122   3          }           
 123   2        }
 124   1      }
 125          
 126          void  deal_82_cmd(uint8_t Uart, uint8_t* arr)
 127          {    
 128   1        uint8_t i = 0;
 129   1      
 130   1        if( Crc_check_flog == 0 ) //不含CRC检验
 131   1        {    
 132   2          if(arr[4] == 0x00 && arr[5] == 0x06)
 133   2          {
 134   3            Write_Dgus(0x0006,0x5aa5);
 135   3            Write_Dgus(0x0007,0X8000);
 136   3          }else
 137   2          {
 138   3            Write_Dgusii_Vp_byChar((arr[4] << 8) + arr[5],arr + 6,arr[2] - 3);  
 139   3          }
 140   2          
 141   2          if( Response_flog == 1 )   
 142   2          {
 143   3            uint8_t Temp_arr[]={DTHD1,DTHD2,0X03,0X82,0X4F,0X4B};   
 144   3                        
 145   3            for(i = 0; i < 6; i++)
 146   3            {
 147   4              uart_send_byte(Uart,Temp_arr[i]); //5A A5 03 82 4F 4B
 148   4            }                    
 149   3          }
 150   2        }
 151   1      }
 152          
 153          void  deal_83_cmd(uint8_t Uart, uint8_t* arr, uint8_t* arr1)
 154          {
 155   1          uint8_t i = 0;
 156   1      
 157   1          if( Crc_check_flog == 0 ) //不含CRC检验
 158   1          {   
 159   2              for( i = 0; i < 7; i++ )
 160   2              {
 161   3                  arr[i] = arr1[i];
 162   3              }
 163   2      
 164   2              sys_read_vp((arr[4] << 8) + arr[5], (uint8_t*) & arr[7], arr[6]);
 165   2              arr[2]=(2 * arr[6]) + 4;
 166   2      
 167   2              for(i = 0; i < (arr[2] + 3); i++)
 168   2              {
 169   3                  uart_send_byte(Uart, arr[i]);
 170   3              }                              
 171   2          }
 172   1      }
 173          
 174          void uart_send_byte(uint8_t Uart_number, uint8_t Dat)
 175          {
 176   1          download_flag = 1;
 177   1      
C51 COMPILER V9.60.7.0   UART                                                              10/09/2025 15:07:42 PAGE 4   

 178   1          if( Uart_number == 2 )
 179   1          {
 180   2              while (Busy2);               
 181   2              Busy2 = 1;
 182   2              SBUF0 = Dat;         
 183   2          }
 184   1      }
 185          
 186          /*    自动上传处理    */
 187          void  Sw_Data_Send()
 188          {
 189   1        uint16_t  Va=Read_Dgus(0x0f00);
 190   1        uint16_t  V1=Read_Dgus(0x0f01);
 191   1        uint16_t addr_vol;
 192   1        uint8_t  val_H;
 193   1        uint8_t  val_L;
 194   1      
 195   1        if( ((uint8_t)(Va >> 8)) == 0x5A )
 196   1        {    
 197   2          uint8_t i = 0;
 198   2          uint16_t Temp = 0;
 199   2          uint8_t Val[100] = {0};      //5A A5 06 83 ADDR Len XX XX 
 200   2      
 201   2          Val[0] = 0x5A;
 202   2          Val[1] = 0xA5;
 203   2          Val[2] = (((uint8_t)V1) << 1) + 4;
 204   2          Val[3] = 0x83;
 205   2          Val[4] = (uint8_t)Va; 
 206   2          Val[5] = (uint8_t)(V1 >> 8);
 207   2          Val[6] = (uint8_t)V1;
 208   2          for(i = 0; i < (uint8_t)V1; i++)
 209   2          {
 210   3            Temp=Read_Dgus(((Val[4] << 8) + Val[5] + i));
 211   3            Val[7 + 2 * i] = (uint8_t)(Temp >> 8);
 212   3            Val[8 + 2 * i] = (uint8_t)(Temp);
 213   3          }
 214   2          addr_vol = (Val[4] << 8) | ( Val[5] & 0xff);
 215   2          printf("addr is %04x\r\n",addr_vol);
 216   2          
 217   2          val_H = Val[7];
 218   2          val_L = Val[8];
 219   2      
 220   2          gui_vol_ctrl(addr_vol, val_H, val_L);
 221   2      
 222   2          uart_data_send(Val, 2, 1, CRC_CHECK_UART2); 
 223   2          Write_Dgus(0x0f00, 0);Write_Dgus(0x0f01, 0);
 224   2        }
 225   1      }
 226          
 227          /****************************数据自动上传************************************************/
 228          void uart_data_send(uint8_t* Arr,uint8_t Uartnum,bit Outo_send,bit Crc_ck )
 229          {
 230   1        uint8_t i = 0;      
 231   1        Auto_data_upload = Outo_send;
 232   1        if( Auto_data_upload ) 
 233   1        {
 234   2          for(i = 0; i < Arr[2] + 3; i++)
 235   2          {
 236   3            uart_send_byte(Uartnum, Arr[i]);  
 237   3          }
 238   2        }              
 239   1      }
C51 COMPILER V9.60.7.0   UART                                                              10/09/2025 15:07:42 PAGE 5   

*** WARNING C280 IN LINE 228 OF ..\Core\Src\uart.c: 'Crc_ck': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1572    ----
   CONSTANT SIZE    =    376    ----
   XDATA SIZE       =   2052     409
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6       5
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
